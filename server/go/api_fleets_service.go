/*
 * Kusk Gateway API
 *
 * This is the Kusk Gateway Management API
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"fmt"
	"net/http"
	"strings"

	"github.com/GIT_USER_ID/GIT_REPO_ID/k8sclient"
)

// FleetsApiService is a service that implements the logic for the FleetsApiServicer
// This service should implement the business logic for every endpoint for the FleetsApi API.
// Include any external packages or services that will be required by this service.
type FleetsApiService struct {
	K8sClient k8sclient.K8sClient
}

// NewFleetsApiService creates a default api service
func NewFleetsApiService(k8sclient k8sclient.K8sClient) FleetsApiServicer {
	return &FleetsApiService{
		K8sClient: k8sclient,
	}
}

// GetEnvoyFleet - Get details for a single envoy fleet
func (s *FleetsApiService) GetEnvoyFleet(ctx context.Context, namespace string, name string) (ImplResponse, error) {
	fleet, err := s.K8sClient.GetEnvoyFleet(namespace, name)

	if err != nil {
		if strings.Contains(err.Error(), fmt.Sprintf(`envoyfleet.gateway.kusk.io "%s" not found`, name)) {
			return Response(http.StatusNotFound, err), err
		}
		return Response(http.StatusInternalServerError, err), err
	}
	return Response(http.StatusOK, fleet), nil
}

// GetEnvoyFleets - Get a list of envoy fleets
func (s *FleetsApiService) GetEnvoyFleets(ctx context.Context, namespace string) (ImplResponse, error) {
	fleets, err := s.K8sClient.GetEnvoyFleets()
	if err != nil {
		return Response(http.StatusInternalServerError, err), err
	}
	return Response(http.StatusOK, fleets), nil
}
