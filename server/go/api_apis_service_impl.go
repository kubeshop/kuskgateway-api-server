/*
 * Kusk Gateway API
 *
 * This is the Kusk Gateway Management API
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"fmt"
	"net/http"

	"github.com/kubeshop/kusk-gateway/api/v1alpha1"
)

// GetApis - Get a list of APIs
func (s *ApisApiService) GetApis(ctx context.Context, fleet string) (ImplResponse, error) {
	apis, err := s.kuskClient.GetApis()
	if err != nil {
		return Response(http.StatusInternalServerError, err), err
	}

	return Response(http.StatusOK, convertAPIListCRDtoAPIsModel(apis)), nil
}

// GetApi - Get an API instance by namespace and name
func (s *ApisApiService) GetApi(ctx context.Context, namespace string, name string) (ImplResponse, error) {
	api, err := s.kuskClient.GetApi(namespace, name)
	if err != nil {
		return Response(http.StatusInternalServerError, err), err
	}

	return Response(http.StatusOK, convertAPICRDtoAPIModel(api)), nil
}

// GetPostProcessedOpenApiSpec - Get the post-processed OpenAPI spec by API id
func (s *ApisApiService) GetRawOpenApiSpec(ctx context.Context, namespace string, name string) (ImplResponse, error) {
	api, err := s.kuskClient.GetApi(namespace, name)
	if err != nil {
		return Response(http.StatusInternalServerError, err), err
	}

	return Response(http.StatusOK, api.Spec.Spec), nil
}

func convertAPIListCRDtoAPIsModel(apis v1alpha1.APIList) []ApiItem {
	toReturn := []ApiItem{}
	for _, api := range apis.Items {
		toReturn = append(toReturn, convertAPICRDtoAPIModel(&api))
	}
	return toReturn
}

func convertAPICRDtoAPIModel(api *v1alpha1.API) ApiItem {
	fmt.Println("api.Name", api.Name)
	return ApiItem{
		Name: api.Name,
	}
}
