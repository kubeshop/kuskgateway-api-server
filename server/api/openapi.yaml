openapi: 3.0.0
info:
  description: This is the Kusk Gateway Management API
  title: Kusk Gateway API
  version: 1.0.0
externalDocs:
  description: Find out more about Kusk-Gateway
  url: https://kubeshop.github.io/kusk-gateway/
servers:
- description: My local endpoint mockup
  url: http://localhost:4010
- description: Testing endpoint
  url: http://147.75.33.177:8080
tags:
- description: Get the list of the APIs
  name: apis
- description: Get the list of all services
  name: services
- description: Get the list of all envoy fleets
  name: fleets
- description: Get the list of all static routes
  name: static routes
paths:
  /apis:
    get:
      description: Returns the list of APIs available in the cluster
      operationId: getApis
      parameters:
      - description: optional filter on fleet
        explode: true
        in: query
        name: fleetname
        required: false
        schema:
          type: string
        style: form
      - description: optional filter on fleet
        explode: true
        in: query
        name: fleetnamespace
        required: false
        schema:
          type: string
        style: form
      - description: optional filter on namespace
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiItem'
                type: array
          description: a list of apis
      summary: Get a list of APIs
      tags:
      - apis
  /apis/{namespace}/{name}:
    get:
      operationId: getApi
      parameters:
      - explode: false
        in: path
        name: namespace
        required: true
        schema:
          default: default
          type: string
        style: simple
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiItem'
          description: API item
        "404":
          description: API item not found
      summary: Get an API instance by namespace and name
      tags:
      - apis
  /apis/{namespace}/{name}/crd:
    get:
      operationId: getApiCRD
      parameters:
      - explode: false
        in: path
        name: namespace
        required: true
        schema:
          default: default
          type: string
        style: simple
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: returns the CRD of the API ( Raw Api Spec )
        "404":
          description: API CRD not found
      summary: Get API CRD from cluster
      tags:
      - apis
  /apis/{namespace}/{name}/definition:
    get:
      operationId: getApiDefinition
      parameters:
      - explode: false
        in: path
        name: namespace
        required: true
        schema:
          default: default
          type: string
        style: simple
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: API definition item
        "404":
          description: API definition not found
      summary: Get API definition ( Post-Processed version )
      tags:
      - apis
  /services:
    get:
      description: Returns the list of services available in the cluster that are
        related to kusk-gateway
      operationId: getServices
      parameters:
      - description: optional filter on namespace
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceItem'
                type: array
          description: list of services
      summary: Get a list of services handled by kusk-gateway
      tags:
      - services
  /services/{namespace}/{name}:
    get:
      description: Returns an object containing info about the service corresponding
        to the namespace and name
      operationId: getService
      parameters:
      - explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceItem'
          description: service details
        "404":
          description: Service not found by namespace-name combination
      summary: Get details for a single service
      tags:
      - services
  /fleets:
    get:
      description: Returns a list of envoy fleets that are available in the cluster
      operationId: getEnvoyFleets
      parameters:
      - description: optional filter on namespace
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EnvoyFleetItem'
                type: array
          description: list of envoy fleets
      summary: Get a list of envoy fleets
      tags:
      - fleets
  /fleets/{namespace}/{name}:
    get:
      description: Returns an object containing info about the envoy fleet corresponding
        to the namespace and name
      operationId: getEnvoyFleet
      parameters:
      - description: the namespace of the fleet
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: the name of the fleet
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvoyFleetItem'
          description: envoy fleet details
        "404":
          description: Envoy fleet not found by namespace-name combination
      summary: Get details for a single envoy fleet
      tags:
      - fleets
  /fleets/{namespace}/{name}/crd:
    get:
      operationId: getEnvoyFleetCRD
      parameters:
      - explode: false
        in: path
        name: namespace
        required: true
        schema:
          default: default
          type: string
        style: simple
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Envoy fleet CRD
        "404":
          description: Envoy fleet CRD not found
      summary: Get envoy fleet CRD
      tags:
      - fleets
  /staticroutes:
    get:
      description: Returns a list of static routes
      operationId: getStaticRoutes
      parameters:
      - description: optional filter on namespace
        explode: true
        in: query
        name: namespace
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/StaticRouteItem'
                type: array
          description: list of static routes
      summary: Get a list of static routes
      tags:
      - static routes
  /staticroutes/{namespace}/{name}:
    get:
      description: Returns an object containing info about the static route corresponding
        to the namespace and name
      operationId: getStaticRoute
      parameters:
      - description: the namespace of the static route
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: the name of the static route
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRouteItem'
          description: get static route details
        "404":
          description: Static Route not found by namespace-name combination
      summary: Get details for a single static route
      tags:
      - static routes
  /staticroutes/{namespace}/{name}/crd:
    get:
      operationId: getStaticRouteCRD
      parameters:
      - explode: false
        in: path
        name: namespace
        required: true
        schema:
          default: default
          type: string
        style: simple
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Static route CRD
        "404":
          description: Static route CRD not found
      summary: Get static route CRD
      tags:
      - static routes
components:
  schemas:
    ApiItem:
      example:
        fleet:
          name: name
          namespace: namespace
        service:
          name: name
          namespace: namespace
        name: name
        namespace: namespace
        version: version
      properties:
        name:
          type: string
        namespace:
          type: string
        fleet:
          $ref: '#/components/schemas/ApiItem_Fleet'
        service:
          $ref: '#/components/schemas/ApiItem_Service'
        version:
          type: string
      required:
      - fleet
      - name
      - namespace
      - service
      - version
      type: object
    ServiceItem:
      example:
        name: name
        namespace: namespace
        ports:
          protocol: protocol
          port: 6.027456183070403
          name: name
          nodePort: 0.8008281904610115
          targetPort: targetPort
        status: available
      properties:
        name:
          type: string
        status:
          enum:
          - available
          - unavailable
          type: string
        namespace:
          type: string
        ports:
          $ref: '#/components/schemas/ServicePortItem'
      required:
      - name
      - namespace
      - ports
      - status
      type: object
    EnvoyFleetItem:
      example:
        staticRoutes:
        - name: name
          namespace: namespace
        - name: name
          namespace: namespace
        apis:
        - name: name
          namespace: namespace
        - name: name
          namespace: namespace
        name: name
        namespace: namespace
        services:
        - name: name
          namespace: namespace
          ports:
            protocol: protocol
            port: 6.027456183070403
            name: name
            nodePort: 0.8008281904610115
            targetPort: targetPort
          status: available
        - name: name
          namespace: namespace
          ports:
            protocol: protocol
            port: 6.027456183070403
            name: name
            nodePort: 0.8008281904610115
            targetPort: targetPort
          status: available
      properties:
        name:
          type: string
        namespace:
          type: string
        apis:
          items:
            $ref: '#/components/schemas/ApiItem_Fleet'
          type: array
        services:
          items:
            $ref: '#/components/schemas/ServiceItem'
          type: array
        staticRoutes:
          items:
            $ref: '#/components/schemas/StaticRouteItem_Fleet'
          type: array
      required:
      - name
      - namespace
      type: object
    StaticRouteItem:
      example:
        name: name
        namespace: namespace
      properties:
        name:
          type: string
        namespace:
          type: string
      required:
      - name
      - namespace
      type: object
    ApiItem_Fleet:
      example:
        name: name
        namespace: namespace
      properties:
        name:
          type: string
        namespace:
          type: string
      required:
      - name
      - namespace
      type: object
    ServicePortItem:
      example:
        protocol: protocol
        port: 6.027456183070403
        name: name
        nodePort: 0.8008281904610115
        targetPort: targetPort
      properties:
        name:
          type: string
        nodePort:
          type: number
        port:
          type: number
        protocol:
          type: string
        targetPort:
          type: string
      required:
      - name
      - nodePort
      - port
      - protocol
      - targetPort
      type: object
    StaticRouteItem_Fleet:
      example:
        name: name
        namespace: namespace
      properties:
        name:
          type: string
        namespace:
          type: string
      required:
      - name
      - namespace
      type: object
    ApiItem_Service:
      example:
        name: name
        namespace: namespace
      properties:
        name:
          type: string
        namespace:
          type: string
      required:
      - name
      - namespace
      type: object
